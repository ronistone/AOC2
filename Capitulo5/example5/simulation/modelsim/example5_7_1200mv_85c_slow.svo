// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "10/23/2017 13:30:31"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (SystemVerilog) only
// 

`timescale 1 ps/ 1 ps

module example5 (
	clk,
	reset,
	LEDR);
input 	logic clk ;
input 	logic reset ;
output 	logic [7:0] LEDR ;

// Design Ports Information
// LEDR[0]	=>  Location: PIN_G19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[1]	=>  Location: PIN_F19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[2]	=>  Location: PIN_E19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[3]	=>  Location: PIN_F21,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[4]	=>  Location: PIN_F18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[5]	=>  Location: PIN_E18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[6]	=>  Location: PIN_J19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDR[7]	=>  Location: PIN_H19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_AB28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_AC28,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("example5_7_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \LEDR[0]~output_o ;
wire \LEDR[1]~output_o ;
wire \LEDR[2]~output_o ;
wire \LEDR[3]~output_o ;
wire \LEDR[4]~output_o ;
wire \LEDR[5]~output_o ;
wire \LEDR[6]~output_o ;
wire \LEDR[7]~output_o ;
wire \clk~input_o ;
wire \LEDR[0]~21_combout ;
wire \reset~input_o ;
wire \LEDR[0]~reg0_Duplicate_1_q ;
wire \LEDR[0]~reg0_q ;
wire \LEDR[1]~reg0_Duplicate_1_q ;
wire \LEDR[1]~7_combout ;
wire \LEDR[1]~reg0_q ;
wire \LEDR[2]~reg0_Duplicate_1_q ;
wire \LEDR[1]~8 ;
wire \LEDR[2]~9_combout ;
wire \LEDR[2]~reg0_q ;
wire \LEDR[3]~reg0_Duplicate_1_q ;
wire \LEDR[2]~10 ;
wire \LEDR[3]~11_combout ;
wire \LEDR[3]~reg0_q ;
wire \LEDR[4]~reg0_Duplicate_1_q ;
wire \LEDR[3]~12 ;
wire \LEDR[4]~13_combout ;
wire \LEDR[4]~reg0_q ;
wire \LEDR[5]~reg0_Duplicate_1_q ;
wire \LEDR[4]~14 ;
wire \LEDR[5]~15_combout ;
wire \LEDR[5]~reg0_q ;
wire \LEDR[6]~reg0_Duplicate_1_q ;
wire \LEDR[5]~16 ;
wire \LEDR[6]~17_combout ;
wire \LEDR[6]~reg0_q ;
wire \LEDR[7]~reg0_Duplicate_1_q ;
wire \LEDR[6]~18 ;
wire \LEDR[7]~19_combout ;
wire \LEDR[7]~reg0_q ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X69_Y73_N16
cycloneive_io_obuf \LEDR[0]~output (
	.i(\LEDR[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X94_Y73_N2
cycloneive_io_obuf \LEDR[1]~output (
	.i(\LEDR[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X94_Y73_N9
cycloneive_io_obuf \LEDR[2]~output (
	.i(\LEDR[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[2]~output .bus_hold = "false";
defparam \LEDR[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X107_Y73_N16
cycloneive_io_obuf \LEDR[3]~output (
	.i(\LEDR[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[3]~output .bus_hold = "false";
defparam \LEDR[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X87_Y73_N16
cycloneive_io_obuf \LEDR[4]~output (
	.i(\LEDR[4]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[4]~output .bus_hold = "false";
defparam \LEDR[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X87_Y73_N9
cycloneive_io_obuf \LEDR[5]~output (
	.i(\LEDR[5]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[5]~output .bus_hold = "false";
defparam \LEDR[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X72_Y73_N9
cycloneive_io_obuf \LEDR[6]~output (
	.i(\LEDR[6]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[6]~output .bus_hold = "false";
defparam \LEDR[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X72_Y73_N2
cycloneive_io_obuf \LEDR[7]~output (
	.i(\LEDR[7]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[7]~output .bus_hold = "false";
defparam \LEDR[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X115_Y17_N1
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N12
cycloneive_lcell_comb \LEDR[0]~21 (
// Equation(s):
// \LEDR[0]~21_combout  = !\LEDR[0]~reg0_Duplicate_1_q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\LEDR[0]~reg0_Duplicate_1_q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\LEDR[0]~21_combout ),
	.cout());
// synopsys translate_off
defparam \LEDR[0]~21 .lut_mask = 16'h0F0F;
defparam \LEDR[0]~21 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X115_Y14_N1
cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X92_Y69_N13
dffeas \LEDR[0]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[0]~21_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[0]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[0]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[0]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: DDIOOUTCELL_X69_Y73_N18
dffeas \LEDR[0]~reg0 (
	.clk(\clk~input_o ),
	.d(!\LEDR[0]~reg0_Duplicate_1_q ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[0]~reg0 .is_wysiwyg = "true";
defparam \LEDR[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N17
dffeas \LEDR[1]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[1]~7_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[1]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[1]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[1]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N16
cycloneive_lcell_comb \LEDR[1]~7 (
// Equation(s):
// \LEDR[1]~7_combout  = (\LEDR[0]~reg0_Duplicate_1_q  & (\LEDR[1]~reg0_Duplicate_1_q  $ (VCC))) # (!\LEDR[0]~reg0_Duplicate_1_q  & (\LEDR[1]~reg0_Duplicate_1_q  & VCC))
// \LEDR[1]~8  = CARRY((\LEDR[0]~reg0_Duplicate_1_q  & \LEDR[1]~reg0_Duplicate_1_q ))

	.dataa(\LEDR[0]~reg0_Duplicate_1_q ),
	.datab(\LEDR[1]~reg0_Duplicate_1_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\LEDR[1]~7_combout ),
	.cout(\LEDR[1]~8 ));
// synopsys translate_off
defparam \LEDR[1]~7 .lut_mask = 16'h6688;
defparam \LEDR[1]~7 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: DDIOOUTCELL_X94_Y73_N4
dffeas \LEDR[1]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[1]~7_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[1]~reg0 .is_wysiwyg = "true";
defparam \LEDR[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N19
dffeas \LEDR[2]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[2]~9_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[2]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[2]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[2]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N18
cycloneive_lcell_comb \LEDR[2]~9 (
// Equation(s):
// \LEDR[2]~9_combout  = (\LEDR[2]~reg0_Duplicate_1_q  & (!\LEDR[1]~8 )) # (!\LEDR[2]~reg0_Duplicate_1_q  & ((\LEDR[1]~8 ) # (GND)))
// \LEDR[2]~10  = CARRY((!\LEDR[1]~8 ) # (!\LEDR[2]~reg0_Duplicate_1_q ))

	.dataa(gnd),
	.datab(\LEDR[2]~reg0_Duplicate_1_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LEDR[1]~8 ),
	.combout(\LEDR[2]~9_combout ),
	.cout(\LEDR[2]~10 ));
// synopsys translate_off
defparam \LEDR[2]~9 .lut_mask = 16'h3C3F;
defparam \LEDR[2]~9 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: DDIOOUTCELL_X94_Y73_N11
dffeas \LEDR[2]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[2]~9_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[2]~reg0 .is_wysiwyg = "true";
defparam \LEDR[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N21
dffeas \LEDR[3]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[3]~11_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[3]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[3]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[3]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N20
cycloneive_lcell_comb \LEDR[3]~11 (
// Equation(s):
// \LEDR[3]~11_combout  = (\LEDR[3]~reg0_Duplicate_1_q  & (\LEDR[2]~10  $ (GND))) # (!\LEDR[3]~reg0_Duplicate_1_q  & (!\LEDR[2]~10  & VCC))
// \LEDR[3]~12  = CARRY((\LEDR[3]~reg0_Duplicate_1_q  & !\LEDR[2]~10 ))

	.dataa(gnd),
	.datab(\LEDR[3]~reg0_Duplicate_1_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LEDR[2]~10 ),
	.combout(\LEDR[3]~11_combout ),
	.cout(\LEDR[3]~12 ));
// synopsys translate_off
defparam \LEDR[3]~11 .lut_mask = 16'hC30C;
defparam \LEDR[3]~11 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: DDIOOUTCELL_X107_Y73_N18
dffeas \LEDR[3]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[3]~11_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[3]~reg0 .is_wysiwyg = "true";
defparam \LEDR[3]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N23
dffeas \LEDR[4]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[4]~13_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[4]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[4]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[4]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N22
cycloneive_lcell_comb \LEDR[4]~13 (
// Equation(s):
// \LEDR[4]~13_combout  = (\LEDR[4]~reg0_Duplicate_1_q  & (!\LEDR[3]~12 )) # (!\LEDR[4]~reg0_Duplicate_1_q  & ((\LEDR[3]~12 ) # (GND)))
// \LEDR[4]~14  = CARRY((!\LEDR[3]~12 ) # (!\LEDR[4]~reg0_Duplicate_1_q ))

	.dataa(\LEDR[4]~reg0_Duplicate_1_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\LEDR[3]~12 ),
	.combout(\LEDR[4]~13_combout ),
	.cout(\LEDR[4]~14 ));
// synopsys translate_off
defparam \LEDR[4]~13 .lut_mask = 16'h5A5F;
defparam \LEDR[4]~13 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: DDIOOUTCELL_X87_Y73_N18
dffeas \LEDR[4]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[4]~13_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[4]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[4]~reg0 .is_wysiwyg = "true";
defparam \LEDR[4]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N25
dffeas \LEDR[5]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[5]~15_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[5]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[5]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[5]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N24
cycloneive_lcell_comb \LEDR[5]~15 (
// Equation(s):
// \LEDR[5]~15_combout  = (\LEDR[5]~reg0_Duplicate_1_q  & (\LEDR[4]~14  $ (GND))) # (!\LEDR[5]~reg0_Duplicate_1_q  & (!\LEDR[4]~14  & VCC))
// \LEDR[5]~16  = CARRY((\LEDR[5]~reg0_Duplicate_1_q  & !\LEDR[4]~14 ))

	.dataa(gnd),
	.datab(\LEDR[5]~reg0_Duplicate_1_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LEDR[4]~14 ),
	.combout(\LEDR[5]~15_combout ),
	.cout(\LEDR[5]~16 ));
// synopsys translate_off
defparam \LEDR[5]~15 .lut_mask = 16'hC30C;
defparam \LEDR[5]~15 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: DDIOOUTCELL_X87_Y73_N11
dffeas \LEDR[5]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[5]~15_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[5]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[5]~reg0 .is_wysiwyg = "true";
defparam \LEDR[5]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N27
dffeas \LEDR[6]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[6]~17_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[6]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[6]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[6]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N26
cycloneive_lcell_comb \LEDR[6]~17 (
// Equation(s):
// \LEDR[6]~17_combout  = (\LEDR[6]~reg0_Duplicate_1_q  & (!\LEDR[5]~16 )) # (!\LEDR[6]~reg0_Duplicate_1_q  & ((\LEDR[5]~16 ) # (GND)))
// \LEDR[6]~18  = CARRY((!\LEDR[5]~16 ) # (!\LEDR[6]~reg0_Duplicate_1_q ))

	.dataa(\LEDR[6]~reg0_Duplicate_1_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\LEDR[5]~16 ),
	.combout(\LEDR[6]~17_combout ),
	.cout(\LEDR[6]~18 ));
// synopsys translate_off
defparam \LEDR[6]~17 .lut_mask = 16'h5A5F;
defparam \LEDR[6]~17 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: DDIOOUTCELL_X72_Y73_N11
dffeas \LEDR[6]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[6]~17_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[6]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[6]~reg0 .is_wysiwyg = "true";
defparam \LEDR[6]~reg0 .power_up = "low";
// synopsys translate_on

// Location: FF_X92_Y69_N29
dffeas \LEDR[7]~reg0_Duplicate_1 (
	.clk(\clk~input_o ),
	.d(\LEDR[7]~19_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[7]~reg0_Duplicate_1_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[7]~reg0_Duplicate_1 .is_wysiwyg = "true";
defparam \LEDR[7]~reg0_Duplicate_1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X92_Y69_N28
cycloneive_lcell_comb \LEDR[7]~19 (
// Equation(s):
// \LEDR[7]~19_combout  = \LEDR[6]~18  $ (!\LEDR[7]~reg0_Duplicate_1_q )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\LEDR[7]~reg0_Duplicate_1_q ),
	.cin(\LEDR[6]~18 ),
	.combout(\LEDR[7]~19_combout ),
	.cout());
// synopsys translate_off
defparam \LEDR[7]~19 .lut_mask = 16'hF00F;
defparam \LEDR[7]~19 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: DDIOOUTCELL_X72_Y73_N4
dffeas \LEDR[7]~reg0 (
	.clk(\clk~input_o ),
	.d(\LEDR[7]~19_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\LEDR[7]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \LEDR[7]~reg0 .is_wysiwyg = "true";
defparam \LEDR[7]~reg0 .power_up = "low";
// synopsys translate_on

assign LEDR[0] = \LEDR[0]~output_o ;

assign LEDR[1] = \LEDR[1]~output_o ;

assign LEDR[2] = \LEDR[2]~output_o ;

assign LEDR[3] = \LEDR[3]~output_o ;

assign LEDR[4] = \LEDR[4]~output_o ;

assign LEDR[5] = \LEDR[5]~output_o ;

assign LEDR[6] = \LEDR[6]~output_o ;

assign LEDR[7] = \LEDR[7]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
